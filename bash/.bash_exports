# XDG Base Directory
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"
export XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
export XDG_STATE_HOME="${XDG_STATE_HOME:-$HOME/.local/state}"

# PATH
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]; then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
# SCRIPTS
if ! [[ "$PATH" =~ "$HOME/.scripts:" ]]; then
    PATH="$HOME/.scripts:$PATH"
fi
export PATH

export CDPATH=.:~:/etc:/var

# Default applications
export EDITOR="nvim"
export VISUAL="nvim"
export PAGER="less"
export MANPAGER="less"

# mozilla environment variables
export MOZ_ENABLED_WAYLAND=1

# Locale
export LANG=en_CA.UTF-8
export LC_ALL=en_CA.UTF-8

export HISTIGNORE="ls:cd:pwd:exit:date:* --help"
export LESSHISTFILE=-

# enable fzf key bindings and auto-completion
export FZF_DEFAULT_OPTS=" \
--color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
--color=marker:#b4befe,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8 \
--color=selected-bg:#45475a \
--multi"

export FZF_CTRL_T_OPTS="
  --walker-skip .git,node_modules,target
  --preview 'bat -n --color=always {}'
  --bind 'ctrl-/:change-preview-window(down|hidden|)'"

export FZF_ALT_C_OPTS="
  --walker-skip .git,node_modules,target
  --preview 'tree -C {}'"
  
export FZF_COMPLETION_TRIGGER='~~'
# export FZF_COMPLETION_OPTS='--border --info=inline'

# bemenu options
export BEMENU_OPTS='--fb "#1e1e2e" --ff "#cdd6f4" --nb "#1e1e2e" --nf "#cdd6f4" --tb "#1e1e2e" --hb "#1e1e2e" --tf "#f38ba8" --hf "#f9e2af" --af "#cdd6f4" --ab "#1e1e2e"'
 
# pnpm
export PNPM_HOME="$XDG_DATA_HOME/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac

# nvm
export NVM_DIR="$XDG_CONFIG_HOME/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Colored grep output
export GREP_OPTIONS='--color=auto'
 
# GPG TTY
export GPG_TTY=$(tty)

# BUN
export BUN_INSTALL="$HOME/.bun"
case ":$PATH:" in
  *":$BUN_INSTALL:"*) ;;
  *) export PATH="$BUN_INSTALL/bin:$PATH" ;;
esac

# PYTHON
export PYTHONWARNINGS="ignore::SyntaxWarning"
